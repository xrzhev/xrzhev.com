<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Xrzheaven</title><link>https://xrzhev.com/</link><description>Recent content on Xrzheaven</description><generator>Hugo -- gohugo.io</generator><language>ja-jp</language><copyright>xrzhev</copyright><lastBuildDate>Wed, 10 Aug 2022 15:25:52 +0900</lastBuildDate><atom:link href="https://xrzhev.com/index.xml" rel="self" type="application/rss+xml"/><item><title>ひとりセキュリティキャンプ開会式</title><link>https://xrzhev.com/posts/2022-08-11/</link><pubDate>Wed, 10 Aug 2022 15:25:52 +0900</pubDate><guid>https://xrzhev.com/posts/2022-08-11/</guid><description>ひとりセキュリティ・キャンプを開催します。
ひとりセキュリティキャンプとは ただセキュリティの勉強をするだけです。一人で。
目的をある程度公開し、自身の勉強した内容やコードを記事として書くことでモチベーションの維持や、学んだ内容や作成したプログラムを公開することで新しく学習していく人たちへの足掛かりになればいいと考えています。
あまり深い意味はないんですが、現在私が26歳ということもあり、IPAのセキュリティ・キャンプに参加できません。（参加できるのが25歳までなんですよね）
参加したかったなあ…という懺悔の気持ちをこめ、このような名前にしています。
と、いうわけでこのような企画を勝手に一人で始めることとしました。
期限は2022年末まで。まとまったらブログの記事としてあげていく予定です。
内容 以下の2つを想定しています。
殺意駆動開発コースです。強いやつに執念で勝っていこうな。
Overlayfs破損のメカニズムの考察・効果的な破壊手法の探求 悪意ある挙動をとるDocker Network Driverの探求 お気持ち ｳｵｵｵｵｵｵｵｵｵ！！　やるぞやるぞ
(セキュリティキャンプという名前の使用に問題があれば連絡下さい。　改名します。)</description></item><item><title>SECCON Beginners CTF 2022 Writeup</title><link>https://xrzhev.com/posts/2022-06-05/</link><pubDate>Sun, 05 Jun 2022 14:42:52 +0900</pubDate><guid>https://xrzhev.com/posts/2022-06-05/</guid><description>2022/06/04 ~ 2022/06/05まで開催されたSECCON Beginners CTF 2022のwriteup。
チーム DCDC で出場した。 チーム得点：2108pt チーム順位：14位 / 891チーム 人数制限がないCTF？だったため、DCDCで動けるメンバーが多数動員され、ライブ感のある楽しいCTFだった。
DCDCメンバーからはSECCON4b作問者メンバーがおり、すごいチームだなあと感じる。
以下、私の解いた問題のWriteup。
web gallery (83pt) 以下の画像のようにFlag自体はすぐ見つかる。
しかし、ファイルを開いても?????????...[snip]と表示され、マトモにPDFを見ることができない。
ソースコードを確認すると、レスポンスのサイズにサイズ制限がかけられており、これが悪さしていると考えた。
HTTPのリクエストには範囲リクエストというものがあり、サーバー側が対応していればコンテンツを分割要求することができる。 今回はそれを利用することで攻略した。 https://developer.mozilla.org/ja/docs/Web/HTTP/Range_requests
curl https://gallery.quals.beginners.seccon.jp/images/flag_7a96139e-71a2-4381-bf31-adf37df94c04.pdf -i -H &amp;#34;Range: bytes=0-10000&amp;#34; -o 1.pdf_chunk curl https://gallery.quals.beginners.seccon.jp/images/flag_7a96139e-71a2-4381-bf31-adf37df94c04.pdf -i -H &amp;#34;Range: bytes=10001-20000&amp;#34; -o 2.pdf_chunk curl https://gallery.quals.beginners.seccon.jp/images/flag_7a96139e-71a2-4381-bf31-adf37df94c04.pdf -i -H &amp;#34;Range: bytes=20001-30000&amp;#34; -o 3.pdf_chunk curl https://gallery.quals.beginners.seccon.jp/images/flag_7a96139e-71a2-4381-bf31-adf37df94c04.pdf -i -H &amp;#34;Range: bytes=30001-40000&amp;#34; -o 4.pdf_chunk curl https://gallery.quals.beginners.seccon.jp/images/flag_7a96139e-71a2-4381-bf31-adf37df94c04.pdf -i -H &amp;#34;Range: bytes=40001-50000&amp;#34; -o 5.pdf_chunk cat *.pdf_chunk &amp;gt; out.</description></item><item><title>マスタリング寝具</title><link>https://xrzhev.com/posts/2022-06-02/</link><pubDate>Thu, 02 Jun 2022 16:55:52 +0900</pubDate><guid>https://xrzhev.com/posts/2022-06-02/</guid><description>はじめに ここ2022年が始まってから数か月もの間、微弱な腰痛になやまされていた。
程度としては「全然歩いたり立ったりできる、でも生活の節々で少しピキっと鋭い痛みがくる感じ」というもの。
学生時代にスポーツでヘルニアをやっていたこともあって、再発を懸念していた。
しかしながら、さる2022年4月某日、ぎっくり腰になった。
それからのめぐるめく絶望の日々。幸いにも仕事はリモートワーク中心のため、さほど大きな支障は出なかった。（立ったり座ったりのワンアクションに1分くらいかかっていたが…）
ぎっくり腰やヘルニアというのは正直当事者にならないと理解できない部分が多い。
ここでぎっくり腰やヘルニアについては多くは語らないが、みな腰を痛めている人には優しくしてほしいと心から願っている。
本記事は筆者が寝具を買い替えたら腰の調子や睡眠が劇的に変わったということをただ書いただけの怪文書である。
そして本記事が腰痛に悩まされるITエンジニアの同胞のみならず、世界で腰痛に悩むものに向け、少しお高い寝具を買う一歩を踏み出すためのバイブルになることを願う。
アナライズ・腰痛 さて、ぎっくり腰が落ち着いた5月初頭から腰痛の根本的な原因の調査を開始した。
実は医学的には腰痛が発生する主な原因はよくわからないことが多いそうだ。
しかしながら、以下のような人間は腰痛になりやすいんじゃないかと私は考えている。
運動不足 座り仕事 姿勢の悪さ まさに職業エンジニアじゃん…。
ちなみに私は運動はきちんとしていたのにぎっくり腰になった。（ジムで週3~4くらいで筋トレしている）
となると座り仕事、姿勢の悪さの2つが腰に対して大きなダメージを与えていそうである。
じゃあいい椅子を買うというアクションに流れるのは確定的に明らかな流れだろう。
しかし私はもうすでにそこそこいい椅子を使っているのでそんなことは関係なかった。（5万くらいの椅子）
椅子が自分の体に合っている/いないは重要だが、ちゃんと座ってなじむものを買ったため、問題はないと考えている。
次に姿勢だが、私は結構悪い部類に該当する。
私は身長が181cmあり、まず日常生活から姿勢が悪い。次に座っているときの姿勢も悪い。スマホもよく使うためストレートネック気味だともいわれている。
整体に行くたびに整体師の先生方に半ば説教じみたことを言われるが、ここ2年程で私の姿勢は悪化の一歩をたどっている。（絶対リモートワークが原因でしょ…。）
ただし、姿勢というものは一朝一夕では決して治るものではない。
そこで取り換えが効く椅子以外のデバイス群で腰痛の要因になっているものを探した。
そこで見つけたのが寝具だ。
私がつかっていた寝具は東京で一人暮らしを始めた際に買ったマットレスだ。
かれこれ5年ほど使っており、価格は8000円程度であった。
私は堅めのマットレスが好きで、低反発のウレタンタイプのものを利用していた。
買った当初は程よい沈み込み・弾力性を兼ね備えていたが、さすがに5年も利用すると様々なところがくたびれてくる。
特に顕著になっていたのはウレタンが経年劣化で部分部分にへこたれており、マットレス自体に凹凸ができていることだった。
低反発マットレスは身体のアーチに沿ってうまく沈み込んでくれるのだが、上述のように凹凸ができると体の一部が変に浮いたままになったりすることで、その部位に負担をかけることになる。
様々な姿勢で寝てテストすると腰の部分がやたら浮いていることに気が付いた。
こんなものを使っていては腰へのダメージが加速する一方だということで、寝具（マットレス）を新たに購入することにした。
チョイス・寝具 さて、寝具を買うとなるとピンからキリまで様々なものが存在する。
そこで予算・寝具に求めるものの観点から調査をすることにした。
バジェット・寝具 予算はおおむね8万円以内ということにした。
私はロングスリーパーなこともあり、人生の1/4以上を過ごす場所に金をかけないのはさすがに勿体ない。
また、8万円という金額は、腰を痛めて病院や整体に通い同じ額を支払うよりも、いいマットレスを購入して毎日眠りにつくほうが圧倒的に価値があると考えている。
8万円というのは現在の貯金から無理なく出せる範囲から設定した。
リクワイアメント・寝具 寝具に求めるスペックだが、以下に記載するようなおおまかな指標を作ったうえで寝具を選定していった。
予算内で購入できること 固めの寝心地であること 保証期間が5年以上であること マットレスの重量が重すぎないこと 一人で運搬できるのが望ましい ショールームなどで実際に寝て確認できること 実際にショールームで寝転んで体験するのは重要な気がしている。
実際に一晩寝てみるのと寝転ぶだけではテスト環境として雲泥の差があるとは思うが、寝転ぶだけでも私と相性の悪いマットレスを候補からはじくことができるため、要件に加えている。
リコメンズ・寝具 そんなこんなで調査を進めているうちに友人から「このマットレスいいよー」とオススメを教えてもらった。
マニフレックスというメーカーのメッシュウィングというもの。
見てみると
コンパクトで折り畳み可能 コイルなしの高反発素材（固め） 10年保証 というなかなかすばらしいスペック。</description></item><item><title>ロシア軍の移動体通信電子戦技術の考察</title><link>https://xrzhev.com/posts/2022-04-20/</link><pubDate>Wed, 20 Apr 2022 20:29:19 +0900</pubDate><guid>https://xrzhev.com/posts/2022-04-20/</guid><description>概要 本記事はロシアが保有する電子戦システム「Leer-3(Леер-3)」に内包されている移動体通信電子戦システムの考察、および移動体通信の電子戦技術を考察した文章である。
移動体通信電子戦というのはいわば携帯電話回線への干渉・攻撃活動であり、本記事では主に移動体通信におけるSMS(Short Message Service)に対しての電子戦アクションについてまとめている。
Leer-3に関する詳細な情報は当然軍事機密であり、インターネット上で収集した記事群から抜粋しているため、確実な情報ではないことを理解してほしい。
ロシア軍が展開するSMSキャンペーン 2014年～ [クリミア危機] 2015年ごろからウクライナの兵士はプロパガンダとおぼしきSMSメッセージを受信したという話がある。
以下のAP通信の記事にまとまっている。
AP news - Ukraine soldiers bombarded by ‘pinpoint propaganda’ texts
AP news - ‘You’re just meat’ - Ukrainian soldiers get chilling texts
#Ukraine troops got these mysterious texts today: &amp;quot;You&amp;#39;re nothing but meat to your commanders!&amp;quot; &amp;quot;Your body will be found when snow melts.&amp;quot; pic.twitter.com/4h2Yh4ZIOX
&amp;mdash; Christopher Miller (@ChristopherJM) February 2, 2017 2018年 参考: Liam Collins大佐の評論 米国陸軍のLiam Collins大佐はクリミア危機が始まった以降のウクライナ紛争（現ロシア・ウクライナ戦争）における電子戦の評論を書いている。</description></item><item><title>メールのドメイン認証まとめ</title><link>https://xrzhev.com/posts/2022-04-06/</link><pubDate>Wed, 06 Apr 2022 20:12:19 +0900</pubDate><guid>https://xrzhev.com/posts/2022-04-06/</guid><description>すでに枯れた技術なのにミドルウェアの設定がめんどくさいメールサーバー。
メールサーバーを作るとき、色々見ながら設定はするけどよくわからんドメイン認証。
新年度ということもあり、初心者でもメールサーバーを構築するにあたって使うであろうドメイン認証の一覧を簡単な説明を載せて書いておく。
各技術はそれ相応に深いもので、本ページだけでの理解は難しいため、適宜色々な解説サイトやRFCを読み込んで仕様を理解してほしい。
ドメイン認証とは メールの送付元ドメインが &amp;ldquo;本物&amp;rdquo; であることをチェックする為に使われている技術。
これはメールの仕様上、メールの送信元をユーザー側から見たときにある程度詐称できることからきている。
送信元メールサーバーから送付先メールサーバーに届けられるメールの中には宛先・送信者にまつわる2つの重要なデータが存在している。
それが エンベロープ と ヘッダー 。
上記の言葉については様々なサイトで解説しているので割愛するが、基本的にヘッダーを書き換えることでなりすましができる。
以下のプログラムは、なりすましメールを作ることができるもの。
#!/usr/bin/env python3 ########### ### 免責事項 ########### # # 本プログラムは検証・勉強用途のみに利用すること。 # 本プログラムを利用して発生したいかなる事象に対し著者は一切の責任を持たない。 # from smtplib import SMTP from email.mime.text import MIMEText # Envelope ENVELOPE_TO = &amp;#34;realreceiver@to.example.com&amp;#34; ENVELOPE_FROM = &amp;#34;realsender@from.example.com&amp;#34; # Header (Fake) HEADER_TO = &amp;#34;fakereceiver@fake.to.example.com&amp;#34; HEADER_FROM = &amp;#34;fakesender@fake.from.example.com&amp;#34; # SMTP Server SMTP_HOST = &amp;#34;smtp.example.com&amp;#34; SMTP_USER = &amp;#34;exampleuser&amp;#34; SMTP_PASS = &amp;#34;examplepass&amp;#34; # Header and Body body = &amp;#34;hogehoge&amp;#34; msg = MIMEText(body, &amp;#34;html&amp;#34;) msg[&amp;#34;Subject&amp;#34;] = &amp;#34;Fake Email&amp;#34; # 以下のTo, Fromを書き換えればなりすましが可能（メールヘッダー） msg[&amp;#34;To&amp;#34;] = HEADER_TO msg[&amp;#34;From&amp;#34;] = HEADER_FROM MESSAGE = msg.</description></item><item><title>Space Heroes CTF Writeup</title><link>https://xrzhev.com/posts/2022-04-04/</link><pubDate>Mon, 04 Apr 2022 10:42:52 +0900</pubDate><guid>https://xrzhev.com/posts/2022-04-04/</guid><description>2022/04/01 ~ 2022/04/03まで開催されたSpace Heroes CTFのwriteup。
チーム DCDC で出場した。
個人得点：754pt チーム得点：2454pt チーム順位：62位 / 778チーム forensics問しか解いてないけど、OpenCVでガチャガチャやったので備忘として残しておく。
Forensics Star Pcap (100pt) pcapファイルが渡される。
中身はICMPのみが取得されているただのパケットキャプチャファイルだが、ICMP codeがASCIIと同期している。
ICMP Codeを読めばフラグ。
shctf{L0g1c-i$-th3-begiNNing-0f-wi$doM}
Netflix and CTF (100pt) pcapファイルが渡される。
中身はHTTP通信を中心として取得されているただのパケットキャプチャファイル。
定期的にPOSTしており、/keypress/Lit_〇ではキーを押下したタイミングでPOSTが投げられているっぽい。
Lit_〇の部分を抜粋して結合するとフラグ。
shctf{T1m3-is-th3-ultimat3-curr3Ncy}
The Legend of the Chozo (100pt) corruptedData.chrという謎のファイルが渡される。
バイナリを読むと普通にPNGファイルのファイルヘッダをいい感じに修正すればOK。
修正前：
00000000: 5047 890a 4e0d 0a1a 0d48 4400 5200 0049 PG..N....HD.R..I 00000010: 0000 00f0 0000 0139 0806 0000 00ae c5ad .......9........ ----snip to EOF--- 修正後：
00000000: 8950 4e47 0d0a 1a0a 0000 000d 4948 4452 .</description></item><item><title>Github ActionsでHugoを自動デプロイさせる</title><link>https://xrzhev.com/posts/2022-03-31/</link><pubDate>Fri, 01 Apr 2022 20:12:34 +0900</pubDate><guid>https://xrzhev.com/posts/2022-03-31/</guid><description>経緯 手動でサーバーに向けてHugoで書いた記事のデプロイをするのがめんどくさい。
手元に同一の記事データやテーマファイルがないと色々厳しいため、GithubでHugoのコンテンツをまるっと管理する形にした。
調べてみるとこのようなスタイルでコンテンツを管理している人が結構多く、同時にHugoからの記事のデプロイもGithub Actionsを利用しているケースが散見されたため、自分もGithub Actionsに入門することにした。
どうやったか Github Actions側のマシンでHugoのコンテンツをビルドしたものをVPSへとrsyncで同期させている。
ビルドしたコンテンツはGithub Pagesとかにデプロイしている人は多いけど、自前のサーバーにデプロイする例がほとんどなかったので以下にWorkflowを書いておく。
Workflowサンプルコード name: Deploy Hugo on: push: branches: - main workflow_dispatch: jobs: build: runs-on: ubuntu-latest concurrency: group: ${{ github.workflow }}-${{ github.ref }} steps: - uses: actions/checkout@v3 with: submodules: true fetch-depth: 0 # quotepathを無効にしないと後述の問題がでる - name: Git config quotepath run: git config core.quotePath false env: TZ: &amp;#39;Asia/Tokyo&amp;#39; - name: Setup Hugo uses: peaceiris/actions-hugo@v2 with: hugo-version: &amp;#39;0.91.2&amp;#39; extended: true - name: Build run: hugo --minify - name: Deploy uses: burnett01/rsync-deployments@5.</description></item><item><title>ブログを作った</title><link>https://xrzhev.com/posts/2022-04-01/</link><pubDate>Thu, 31 Mar 2022 16:51:11 +0900</pubDate><guid>https://xrzhev.com/posts/2022-04-01/</guid><description>作った理由とか 私はすでにはてなブログ (net-nyan-cat)を持っている。(大して記事書いてないけど)
しかしながら昨今の事情でいろいろやっていきにくいところがあるため、特に使っていなかったVPSを利用して自分でブログを作成し運用することにした。
なんでHugoで作ったか このブログはHugoと呼ばれる静的サイトジェネレーターで作成している。
理由は単純でWordPressの運用がめんどくさいから。
昨今のセキュリティ事情を見るととても自前で運用する気にならない。
ある程度知識がついてくると、これが厄介でパラノイア並みのセキュリティ設定を入れたくなってしまう。(これは同業者あるあるなのか？)
WAF入れるのだって面倒だし金もかかることもあるし。
静的サイトジェネレータで記事を書くことは少し面倒だが、PHPやRuby, Pythonといったスクリプト言語をサーバー上で動作させないから安全。
Markdownで書いた記事をHTMLに変換してくれるので表示が早く、サーバー負荷もマジで少ない。
とはいえ、記事の編集がめんどくさいのはあるし、「出先で気軽に更新」なんてのは少しやりにくいかもしれない。特に画像！静的サイトジェネレータと相性がよくない。
WordPressのWYSIWYGエディタになれるとそこがとても不便に感じる。
（そもそも筆が遅い、筆をまともにとらないのであまり問題はないが…。)
まあ手軽に安全性をとれるならトレードオフか、と考えている。
デザインのカスタムとかもこっちのほうが気軽にできて楽しそうだし。
書く記事とか 自身の調査・研究内容を書こうと考えている。
セキュリティとかハードウェアとか無線とかその辺。
あとは仕事で利用したツールや技術の備忘録代わりとしても使ってきたい。(こっちがメインか？) ハードウェア(無線デバイスとかハードウェアハックに必要なアイテムたち)もtwitterで少しつぶやいただけで厄介オタクがDMに殴りこんできて治安が悪いんだよな…。
俺は楽しいインターネットが好きなので、俺やその同類が幸せになれる、そんな記事を書いていきたい。
やっていき！</description></item></channel></rss>