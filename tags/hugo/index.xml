<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Hugo on Xrzheaven</title><link>https://xrzhev.com/tags/hugo/</link><description>Recent content in Hugo on Xrzheaven</description><generator>Hugo -- gohugo.io</generator><language>ja-jp</language><copyright>xrzhev</copyright><lastBuildDate>Fri, 01 Apr 2022 20:12:34 +0900</lastBuildDate><atom:link href="https://xrzhev.com/tags/hugo/index.xml" rel="self" type="application/rss+xml"/><item><title>Github ActionsでHugoを自動デプロイさせる</title><link>https://xrzhev.com/posts/2022-03-31/</link><pubDate>Fri, 01 Apr 2022 20:12:34 +0900</pubDate><guid>https://xrzhev.com/posts/2022-03-31/</guid><description>経緯 手動でサーバーに向けてHugoで書いた記事のデプロイをするのがめんどくさい。
手元に同一の記事データやテーマファイルがないと色々厳しいため、GithubでHugoのコンテンツをまるっと管理する形にした。
調べてみるとこのようなスタイルでコンテンツを管理している人が結構多く、同時にHugoからの記事のデプロイもGithub Actionsを利用しているケースが散見されたため、自分もGithub Actionsに入門することにした。
どうやったか Github Actions側のマシンでHugoのコンテンツをビルドしたものをVPSへとrsyncで同期させている。
ビルドしたコンテンツはGithub Pagesとかにデプロイしている人は多いけど、自前のサーバーにデプロイする例がほとんどなかったので以下にWorkflowを書いておく。
Workflowサンプルコード name: Deploy Hugo on: push: branches: - main workflow_dispatch: jobs: build: runs-on: ubuntu-latest concurrency: group: ${{ github.workflow }}-${{ github.ref }} steps: - uses: actions/checkout@v3 with: submodules: true fetch-depth: 0 # quotepathを無効にしないと後述の問題がでる - name: Git config quotepath run: git config core.quotePath false env: TZ: &amp;#39;Asia/Tokyo&amp;#39; - name: Setup Hugo uses: peaceiris/actions-hugo@v2 with: hugo-version: &amp;#39;0.91.2&amp;#39; extended: true - name: Build run: hugo --minify - name: Deploy uses: burnett01/rsync-deployments@5.</description></item></channel></rss>